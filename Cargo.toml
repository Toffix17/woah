[package]
name = "woe"
version = "0.1.8"
authors = ["Andrew Lilley Brinker <andrewabrinker@gmail.com>"]
description = """
    A Result type that differentiates between local errors (which can be handled)
    and fatal errors (which cannot)
"""
license = "MIT OR Apache-2.0"
edition = "2018"
categories = ["rust-patterns"]
keywords = ["result", "error-handling"]
repository = "https://github.com/alilleybrinker/woe/"
readme = "README.md"

[dependencies]
either = { version = "1.5", optional = true }

[features]
default = ["either_methods"]

# This uses the `either` crate to enable methods which work on
# `Either<LocalErr, FatalErr`.
either_methods = ["either"]

# Enable all nightly-only features of the crate.
nightly = [
    "try_trait",
    "trusted_len",
    "never_type",
    "termination_trait",
    "product_trait",
    "sum_trait",
    "from_iterator_trait"
]

# Allow `woe::Result` to implement `std::ops::Try`
try_trait = []

# Enable `woe::{IntoIter, Iter, IterMut}` to all implement `TrustedLen`.
trusted_len = []

# Enable the `!` type, which allows a cheap `into_ok` conversion if the two error
# types are both `!`.
never_type = []

# Enable implementation of the `Termination` trait when `Result::Ok` is `()` or `!`,
# which lets `woe::Result` be used as the return type of `main`
termination_trait = ["never_type"]

# Enable the `Product` trait, whose implementation requires the `Try` trait.
product_trait = ["try_trait"]

# Enable the `Sum` trait, whose implementation requires the `Try` trait.
sum_trait = ["try_trait"]

# Enable the `FromIterator` trait, whose implementation requires the `Try` trait.
from_iterator_trait = ["try_trait"]

# Make the crate `no_std`-compatible, meaning it can be used in contexts which
# don't have the standard library. Note that this deactivates the `termination_trait`
# feature, which relies on `std::process` (not part of `core`, and thus not supported
# in a `no_std` context).
no_std = []

[package.metadata.docs.rs]
# Turn on all features on docs.rs (documentation explains which are nightly-only)
all-features = true
